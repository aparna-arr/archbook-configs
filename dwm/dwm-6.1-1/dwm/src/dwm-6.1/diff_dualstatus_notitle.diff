--- dwm-dualstatus.c	2015-11-19 16:39:27.671291507 -0800
+++ dwm-notitle.c	2015-11-19 16:37:30.170450924 -0800
@@ -64,7 +64,7 @@
        NetWMFullscreen, NetActiveWindow, NetWMWindowType,
        NetWMWindowTypeDialog, NetClientList, NetLast }; /* EWMH atoms */
 enum { WMProtocols, WMDelete, WMState, WMTakeFocus, WMLast }; /* default atoms */
-enum { ClkTagBar, ClkLtSymbol, ClkStatusText, ClkWinTitle,
+enum { ClkTagBar, ClkLtSymbol, ClkStatusText,
        ClkClientWin, ClkRootWin, ClkLast }; /* clicks */
 
 typedef union {
@@ -141,13 +141,6 @@
 	int monitor;
 } Rule;
 
-typedef struct {
-	int y;
-	int show;
-	Window win;
-	char text[256];
-} Bar;
-
 /* function declarations */
 static void applyrules(Client *c);
 static int applysizehints(Client *c, int *x, int *y, int *w, int *h, int interact);
@@ -217,7 +210,6 @@
 static void tagmon(const Arg *arg);
 static void tile(Monitor *);
 static void togglebar(const Arg *arg);
-static void toggleextrabar(const Arg *arg);
 static void togglefloating(const Arg *arg);
 static void toggletag(const Arg *arg);
 static void toggleview(const Arg *arg);
@@ -274,7 +266,6 @@
 static Drw *drw;
 static Monitor *mons, *selmon;
 static Window root;
-static Bar eb;
 
 /* configuration, allows nested code to access above variables */
 #include "config.h"
@@ -447,10 +438,8 @@
 			arg.ui = 1 << i;
 		} else if (ev->x < x + blw)
 			click = ClkLtSymbol;
-		else if (ev->x > selmon->ww - TEXTW(stext))
-			click = ClkStatusText;
 		else
-			click = ClkWinTitle;
+			click = ClkStatusText;
 	} else if ((c = wintoclient(ev->window))) {
 		focus(c);
 		click = ClkClientWin;
@@ -486,8 +475,6 @@
 		while (m->stack)
 			unmanage(m->stack, 0);
 	XUngrabKey(dpy, AnyKey, AnyModifier, root);
-	XUnmapWindow(dpy, eb.win);
-	XDestroyWindow(dpy, eb.win);
 	while (mons)
 		cleanupmon(mons);
 	for (i = 0; i < CurLast; i++)
@@ -589,7 +576,6 @@
 			updatebars();
 			for (m = mons; m; m = m->next)
 				XMoveResizeWindow(dpy, m->barwin, m->wx, m->by, m->ww, bh);
-			XMoveResizeWindow(dpy, eb.win, mons->wx, eb.y, mons->ww, bh);
 			focus(NULL);
 			arrange(NULL);
 		}
@@ -716,6 +702,7 @@
 void
 drawbar(Monitor *m)
 {
+	
 	int x, xx, w, dx;
 	unsigned int i, occ = 0, urg = 0;
 	Client *c;
@@ -741,7 +728,7 @@
 	drw_text(drw, x, 0, w, bh, m->ltsymbol, 0);
 	x += w;
 	xx = x;
-	if (m == selmon) { /* status is only drawn on selected monitor */
+	if (m == selmon) { // status is only drawn on selected monitor 
 		w = TEXTW(stext);
 		x = m->ww - w;
 		if (x < xx) {
@@ -753,19 +740,17 @@
 		x = m->ww;
 	if ((w = x - xx) > bh) {
 		x = xx;
-		if (m->sel) {
-			drw_setscheme(drw, m == selmon ? &scheme[SchemeSel] : &scheme[SchemeNorm]);
-			drw_text(drw, x, 0, w, bh, m->sel->name, 0);
-			drw_rect(drw, x + 1, 1, dx, dx, m->sel->isfixed, m->sel->isfloating, 0);
-		} else {
+//		if (m->sel) {
+//			drw_setscheme(drw, m == selmon ? &scheme[SchemeSel] : &scheme[SchemeNorm]);
+//			drw_text(drw, x, 0, w, bh, m->sel->name, 0);
+//			drw_rect(drw, x + 1, 1, dx, dx, m->sel->isfixed, m->sel->isfloating, 0);
+//		} else {
 			drw_setscheme(drw, &scheme[SchemeNorm]);
 			drw_rect(drw, x, 0, w, bh, 1, 0, 1);
-		}
+//		}
 	}
 	drw_map(drw, m->barwin, 0, 0, m->ww, bh);
-	drw_setscheme(drw, &scheme[SchemeNorm]);
-	drw_text(drw, 0, 0, mons->ww, bh, eb.text, 0);
-	drw_map(drw, eb.win, 0, 0, mons->ww, bh);
+
 }
 
 void
@@ -1053,7 +1038,6 @@
 
 	c = ecalloc(1, sizeof(Client));
 	c->win = w;
-	updatetitle(c);
 	if (XGetTransientForHint(dpy, w, &trans) && (t = wintoclient(trans))) {
 		c->mon = t->mon;
 		c->tags = t->tags;
@@ -1267,11 +1251,8 @@
 			drawbars();
 			break;
 		}
-		if (ev->atom == XA_WM_NAME || ev->atom == netatom[NetWMName]) {
-			updatetitle(c);
-			if (c == c->mon->sel)
-				drawbar(c->mon);
-		}
+//		if (ev->atom == XA_WM_NAME || ev->atom == netatom[NetWMName])
+//			updatetitle(c);
 		if (ev->atom == netatom[NetWMWindowType])
 			updatewindowtype(c);
 	}
@@ -1573,7 +1554,6 @@
 	root = RootWindow(dpy, screen);
 	drw = drw_create(dpy, screen, root, sw, sh);
 	drw_load_fonts(drw, fonts, LENGTH(fonts));
-	eb.show = extrabar;
 	if (!drw->fontcount)
 		die("no fonts could be loaded.\n");
 	bh = drw->fonts[0]->h + 2;
@@ -1715,17 +1695,6 @@
 }
 
 void
-toggleextrabar(const Arg *arg)
-{
-	if(selmon == mons) {
-		eb.show = !eb.show;
-		updatebarpos(selmon);
-		XMoveResizeWindow(dpy, eb.win, selmon->wx, eb.y, selmon->ww, bh);
-		arrange(selmon);
-	}
-}
-
-void
 togglefloating(const Arg *arg)
 {
 	if (!selmon->sel)
@@ -1837,13 +1806,6 @@
 		XDefineCursor(dpy, m->barwin, cursor[CurNormal]->cursor);
 		XMapRaised(dpy, m->barwin);
 	}
-	if(!eb.win) {
-		eb.win = XCreateWindow(dpy, root, mons->wx, eb.y, mons->ww, bh, 0, DefaultDepth(dpy, screen),
-				       CopyFromParent, DefaultVisual(dpy, screen),
-				       CWOverrideRedirect|CWBackPixmap|CWEventMask, &wa);
-		XDefineCursor(dpy, eb.win, cursor[CurNormal]->cursor);
-		XMapRaised(dpy, eb.win);
-	}
 }
 
 void
@@ -1857,13 +1819,6 @@
 		m->wy = m->topbar ? m->wy + bh : m->wy;
 	} else
 		m->by = -bh;
-	if(m == mons && eb.show) {
-		m->wh -= bh;
-		eb.y = topbar ? m->wy + m->wh : m->wy;
-		m->wy = m->topbar ? m->wy : m->wy + bh;
-	}
-	else
-		eb.y = -bh;
 }
 
 void
@@ -2024,30 +1979,13 @@
 void
 updatetitle(Client *c)
 {
-	if (!gettextprop(c->win, netatom[NetWMName], c->name, sizeof c->name))
-		gettextprop(c->win, XA_WM_NAME, c->name, sizeof c->name);
-	if (c->name[0] == '\0') /* hack to mark broken clients */
-		strcpy(c->name, broken);
 }
 
 void
 updatestatus(void)
 {
-	char text[512];
-	if(!gettextprop(root, XA_WM_NAME, text, sizeof(text))) {
+	if (!gettextprop(root, XA_WM_NAME, stext, sizeof(stext)))
 		strcpy(stext, "dwm-"VERSION);
-		eb.text[0] = '\0';
-	}
-	else {
-		char *e = strchr(text, ';');
-		if(e) {
-			*e = '\0'; e++;
-			strncpy(eb.text, e, sizeof(eb.text)-1);
-		}
-		else
-			eb.text[0] = '\0';
-		strncpy(stext, text, sizeof(stext)-1);
-	}
 	drawbar(selmon);
 }
 
